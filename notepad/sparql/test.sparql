CONSTRUCT { 
	_:filter rdfs:label ?label1 . 
	_:filter rdfs:count  ?count . 
	_:filter notepad:filterByPredicate1 ?p1 . 
	_:filter notepad:filterByObject1    ?o1 . 
} 
WHERE 
{ 
	BIND (bnode() as ?filters) 
	{ 
		SELECT (count (distinct *) as ?count) ?p1 ?o1 # ?p2 ?o2 
		WHERE 
		{ 
			{ 
 
				SELECT (coalesce(?neighbourForward, ?neighbourBackward) AS ?s) 
				WHERE { 
					LET ( ?about := <http://localhost:3030/dev/699676b0-13f0-11e2-9b2e-c82a1402d8a8> ) 
 
					{ ?about ?predicateForward ?neighbourForward 
						BIND (?neighbourForward as ?neighbour) 
					} 
					UNION 
					{ ?neighbourBackward ?predicateBackward ?about 
						BIND (?neighbourBackward as ?neighbour) 
					} 
				} 
			} 
			?s ?p1 ?o1 FILTER( ?p1 != nmo:content ) . 
			?s ?p1 ?o1 FILTER( ?p1 != rdf:type ) . 
		} 
		GROUP BY ?p1 ?o1 # ?p2 ?o2 
 
		HAVING (?count > 1) 
		 
		ORDER BY DESC(?count) 
	} 
 
	OPTIONAL { ?p1 rdfs:label ?p1Label } 
	LET ( ?label1 := CONCAT( ?p1Label, " is ", str(?o1), ' (', str(?count), ')') ) 
 } 